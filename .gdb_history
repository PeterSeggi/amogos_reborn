p sleepingTable->first 
p sleepingTable->first->pid 
p sleepingTable->first->until_ticks 
p ticks
n
continue
p ticks
c
c
c
c
p ticks
n
n
p current_proc->pid
p current_proc->until_ticks 
p ticks
set current_proc->until_ticks = 141
p sleepingTable->first->until_ticks 
c
p ticks
c
p ticks
n
p processTable->processes[current_proc->pid
p processTable->processes[current_proc->pid]
p processTable->processes[current_proc->pid]->state
n
p processTable->processes[current_proc->pid]->state
n
p current_proc 
p sleepingTable->first 
n
n
n
n
n
exit
b sleep
c
n
n
n
n
n
n
n
n
n
n
exit
b initializeScheduler 
c
n
q
b createProcessWithpriority 
c
n
n
exit
b createProcessWithpriority 
c
n
n
q
b _hlt 
c
q
b createProcessWithpriority 
c
n
q
b initializeScheduler 
c
n
n
q
b schedule 
c
n
q
b createProcessWithpriority 
c
n
b schedule 
p scheduler
p scheduler->size 
p scheduler->currentPriorityOffset 
p scheduler->priority 
p scheduler->list 
p scheduler->list[0]
p *scheduler->list[0]
p *scheduler->list[1]
p *scheduler->list[2]
p *scheduler->list[3]
p *scheduler->list[1]
p scheduler->list[0]
p *scheduler->list[0]
p _hlt
p *_hlt
p _hlt()
p &_hlt()
p *_hlt()
b
b schedule
s
n
p priority 
p scheduler->list[priority]
p scheduler->list[priority]->current 
n
s
n
p priority
s
p list->size 
n
s
q
b schedule 
c
p scheduler->list[0]->size 
p scheduler->list[4]->size 
p scheduler->list[3]->size 
p scheduler->list[2]->size 
p scheduler->list[1]->size 
n
n
p processTable->runningPid 
n
q
b schedule 
b createProcessWithpriority 
c
n
n
c
c
n
c
n
c
c
c
c
n
n
n
c
n
q
b processManager.c:88
c
n
c
n
n
c
q
b createProcess
c
p function 
b sleep
c
c
c
p scheduler->list 
p scheduler->list[0]->size 
p scheduler->list[2]->size 
p scheduler->list[1]->size 
p scheduler->list[3]->size 
p scheduler->list[4]->size 
c
n
n
s
q
b processManager.c:88
c
q
b processManager.c:88
c
q
b processManager.c:88
c
b sleep
c
n
b schedule
continue
q
c
n
q
b processManager.c:88
c
n
q
b processManager.c:88
c
p scheduler->list[4]->size 
q
b processManager.c:88
c
n
p scheduler->list[0]
p scheduler->list[0]->size 
p *scheduler->list[0]
s
b schedule 
c
n
b
help
help break
q
b _idle
c
n
c
b schedule
d
b
d
break sleep
c
q
b sleep
c
p scheduler->runnableProcs 
p scheduler->list[4]->size 
p scheduler->list[0]->size 
q
b sleep
c
p scheduler->runnableProcs 
b createSleeper 
c
n
p scheduler->runnableProcs 
b _idle 
c
d
c
q
b sleep
c
c
c
d
c
q
b createSleeper 
d
c
q
