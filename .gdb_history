q
b schedule 
c
n
q
b createProcessWithpriority 
c
n
b schedule 
p scheduler
p scheduler->size 
p scheduler->currentPriorityOffset 
p scheduler->priority 
p scheduler->list 
p scheduler->list[0]
p *scheduler->list[0]
p *scheduler->list[1]
p *scheduler->list[2]
p *scheduler->list[3]
p *scheduler->list[1]
p scheduler->list[0]
p *scheduler->list[0]
p _hlt
p *_hlt
p _hlt()
p &_hlt()
p *_hlt()
b
b schedule
s
n
p priority 
p scheduler->list[priority]
p scheduler->list[priority]->current 
n
s
n
p priority
s
p list->size 
n
s
q
b schedule 
c
p scheduler->list[0]->size 
p scheduler->list[4]->size 
p scheduler->list[3]->size 
p scheduler->list[2]->size 
p scheduler->list[1]->size 
n
n
p processTable->runningPid 
n
q
b schedule 
b createProcessWithpriority 
c
n
n
c
c
n
c
n
c
c
c
c
n
n
n
c
n
q
b processManager.c:88
c
n
c
n
n
c
q
b createProcess
c
p function 
b sleep
c
c
c
p scheduler->list 
p scheduler->list[0]->size 
p scheduler->list[2]->size 
p scheduler->list[1]->size 
p scheduler->list[3]->size 
p scheduler->list[4]->size 
c
n
n
s
q
b processManager.c:88
c
q
b processManager.c:88
c
q
b processManager.c:88
c
b sleep
c
n
b schedule
continue
q
c
n
q
b processManager.c:88
c
n
q
b processManager.c:88
c
p scheduler->list[4]->size 
q
b processManager.c:88
c
n
p scheduler->list[0]
p scheduler->list[0]->size 
p *scheduler->list[0]
s
b schedule 
c
n
b
help
help break
q
b _idle
c
n
c
b schedule
d
b
d
break sleep
c
q
b sleep
c
p scheduler->runnableProcs 
p scheduler->list[4]->size 
p scheduler->list[0]->size 
q
b sleep
c
p scheduler->runnableProcs 
b createSleeper 
c
n
p scheduler->runnableProcs 
b _idle 
c
d
c
q
b sleep
c
c
c
d
c
q
b createSleeper 
d
c
q
c
q
c
q
c
q
b sleep
c
q
c
b sleep
c
c
c
n
q
c
b sleep
c
delete 1
b check_sleepers
c
n
n
c
c
c
c
c
c
c
delete 1
delete 2
c
b check_sleepers
p sleepingTable->first
b sleep
c
p processTable
p *processTable
p processTable[1]
p *scheduler
p scheduler->list[0]->size
p scheduler->list[4]->size
p scheduler->list[4]->firstProcess
p scheduler->list[4]->firstProcess->pid
p processTable->processes[2]->state
p timer_lock
q
c
b sleep
b schedule
q
c
q
c
c
q
b read_pipe 
c
n
p fd
p amount
n
p aux_pipe 
p pipes[2]
n
p aux_pipe->write_fd 
n
p aux_pipe->to_read_idx 
p aux_pipe->to_write_idx 
q
c 
q
c
q
